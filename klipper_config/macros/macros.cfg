[gcode_macro M140]
rename_existing: M140.1
gcode:
    {% set nevermore_start = printer["gcode_macro _USER_VARIABLE"].nevermore_start|default(0.4)|float %}
    {% set exhaust_start = printer["gcode_macro _USER_VARIABLE"].exhaust_start|default(0.9)|float %}

    {% set bed_temp = params.S|float %}
    {% if bed_temp > 100 %}
        SET_FAN_SPEED FAN=exhaust_fan SPEED={exhaust_start}
        SET_FAN_SPEED FAN=nevermore_fan SPEED={nevermore_start}
#    {% else %}
#        SET_FAN_SPEED FAN=exhaust_fan SPEED=0
#        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
    {% endif %}
    M117 Bed Temp: {bed_temp}
    M140.1 S{bed_temp}

#[gcode_macro SET_HEATER_TEMPERATURE]
#rename_existing: BASE_SET_HEATER_TEMPERATURE
#gcode:
#    {% set target = params.TARGET %}
#    {% set heater = params.HEATER %}
#    {% if target > 100 and heater == "heater_bed" %}
#        SET_FAN_SPEED FAN=exhaust_fan SPEED=1
#        SET_FAN_SPEED FAN=nevermore_fan SPEED=0.85
#        M117 {heater} {target}
#    {% else %}
#        SET_FAN_SPEED FAN=exhaust_fan SPEED=0
#        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
#    {% endif %}
#    BASE_SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28 XYZ
    QUAD_GANTRY_LEVEL
    G28 Z
    G1 Y275 F1500 #to avoid probe if clean_nozzle after

[gcode_macro M600]
gcode:
    M117 Filament change
    PAUSE

[gcode_macro PARK]
description: Park the toolhead at the back and retract some filament if the nozzle is hot
gcode:
    {% set E = params.E|default(1.7)|float %}

    {% set x_park = printer.toolhead.axis_minimum.x|float + 150.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 30.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}

    {% set St = printer["gcode_macro _USER_VARIABLE"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLE"].z_drop_speed * 60 %}

    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 50.0) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    {% if printer.extruder.temperature > 185 %}
        G1 E-{E} F2100
    {% endif %}

    G91    
    G1 Z{z_safe} F{Sz}
    G90
    G0 X{x_park} Y{y_park} F{St}
    G91

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel the print, retract 10mm of filament and park
gcode:
    M107 Print Canceled !
    #M400
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
   #BED_MESH_CLEAR
    
    #SET_FAN_SPEED FAN=filter SPEED=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    PARK E=10
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
    G92 E0
    G1 E-1.0 F1500.0
    G90
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    PARK

[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print after an optional unretract
gcode:
    {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int != 0 %}
        M118 You can't resume the print without unlocking the ERCF first.
        M118 Run ERCF_UNLOCK and solve any issue before hitting Resume again
    {% else %}
        #{% set E = params.E|default(1.7)|float %}
        RESTORE_GCODE_STATE NAME=PAUSE_state
        #G1 E{E} F2100
        G90
        {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
        {% endif %}
        BASE_RESUME
    {% endif %}

[include macros_print.cfg]
[include macros_mesh.cfg]
[include macros_tools.cfg]

#####################################################################
# 	No more used
#####################################################################

#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    TURN_OFF_HEATERS
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    BASE_CANCEL_PRINT

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
## change this if you need more or less extrusion
#variable_extrude: 1.0
#gcode:
#    ##### read E from pause macro #####
#    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#    ##### set park positon for x and y #####
#    # default is your max posion from your printer.cfg
#    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#    ##### calculate save lift position #####
#    {% set max_z = printer.toolhead.axis_maximum.z|float %}
#    {% set act_z = printer.toolhead.position.z|float %}
#    {% if act_z < (max_z - 2.0) %}
#        {% set z_safe = 2.0 %}
#    {% else %}
#        {% set z_safe = max_z - act_z %}
#    {% endif %}
#    ##### end of definitions #####
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z{z_safe} F900
#    G90
#    G1 X{x_park} Y{y_park} F6000
#  
#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
#gcode:
#    ##### read E from pause macro #####
#    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#    ##### end of definitions #####
#    G91
#    G1 E{E} F2100
#    RESTORE_GCODE_STATE NAME=PAUSE_state
#    BASE_RESUME

#[gcode_macro QUAD_GANTRY_LEVEL]
#rename_existing: BASE_QGL
#gcode:
#    BASE_QGL
#    G1 X280 Y280 F5000